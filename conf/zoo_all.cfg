#服务的监听端口
clientPort=
#用于存放内存数据快照的文件夹 ,同时用于集群的myid文件也存在这个文件夹里
dataDir=
#Zookeeper的时间单元 Zookeeper中所有时间都是以这个时间单元的整数倍去配置的 例如 ,session的最小超时时间是2*tickTime （单位：毫秒）
tickTime=
#事务日志写入该配置指定的目录 ,而不是 dataDir 所指定的目录 这将允许使用一个专用的日志设备并且帮助我们避免日志和快照之间的竞争
dataLogDir=
#最大请求堆积数 默认是1000 Zookeeper运行过程中 ,尽管Server没有空闲来处理更多的客户端请求了
#但是还是允许客户端将请求提交到服务器上来 ,以提高吞吐性能 当然 ,为了防止Server内存溢出 ,这个请求堆积数还是需要限制下的 
globalOutstandingLimit=
#预先开辟磁盘空间 ,用于后续写入事务日志 默认是64M ,每个事务日志大小就是64M 如果ZK的快照频率较大的话 ,建议适当减小这个参数 
preAllocSize=
#每进行snapCount次事务日志输出后 ,触发一次快照 , 此时 ,Zookeeper会生成一个snapshot.*文件 ,同时创建一个新的事务日志文件log.* 默认是100,000.
snapCount=
#用来指定是一个观察者节点
peerType=observer
#用于记录所有请求的log ,一般调试过程中可以使用
traceFile=
#最大并发客户端数默认值是10 ,设置为0是不加限制
maxClientCnxns=
#对于多网卡的机器 ,可以为每个IP指定不同的监听端口 默认情况是所有IP都监听 clientPort 指定的端口
clientPortAddress=
#Session超时时间限制 默认 2*tickTime ~ 20*tickTime 这个范围
maxSessionTimeout=
minSessionTimeout=
#事务日志输出时 ,如果调用fsync方法超过指定的超时时间 ,那么会在日志中输出警告信息 默认是1000ms 
fsync.warningthresholdms=
#参数指定了需要保留的事务日志和快照文件的数目 默认是保留3个 和autopurge.purgeInterval搭配使用
autopurge.snapRetainCount=
#自动清理事务日志和快照文件的功能 ,这个参数指定了清理频率 ,单位是小时 ,需要配置一个1或更大的整数 ,默认是0 ,表示不开启自动清理功能
autopurge.purgeInterval=
#Observer写入日志和生成快照 ,这样可以减少Observer的恢复时间 默认为true
syncEnabled=
#之前的版本中,这个参数配置是允许我们选择leader选举算法,现在版本中 ,只有FastLeaderElection算法可用
electionAlg=
#Observer和Follower启动时 ,从Leader同步最新数据时 ,Leader允许initLimit * tickTime的时间内完成,默认值10
initLimit=
#默认情况下 ,Leader是会接受客户端连接 ,并提供正常的读写服务,可以将这个参数设置为 no,让Leader不接受客户端的连接 ,默认为yes
leaderServes=
# x是一个数字 ,与每个服务器的myid文件中的id是一样的
#hostname是服务器ip,右边配置两个端口 ,第一个端口用于Follower和Leader之间的数据同步和接受客户端请求 ,第二个端口用于Leader选举过程中投票通信
#在使用observer的时候增加:observer
server.x=hostname:port:port
#表示Follower和Observer与Leader交互时的最大等待时间,只不过是在与leader同步完毕之后,进入正常请求转发或ping等消息交互时的超时时间
syncLimit=
#选举过程中打开一次连接的超时时间 ,默认是5s
cnxTimeout=
#该参数确定了是否需要在事务日志提交的时候调用 FileChannel.force来保证数据完全同步到磁盘 默认值true
forceSync=
#跳过权限检查
skipACL=
#是否监听所有可用IP地址的连接,他会影响ZAB协议和快速Leader选举协议默认是false。
quorumListenOnAllIPs=
#NIO选择器的线程数量 建议使用多个选择器线程来扩大客户端的连接数 ,默认值是（CPU核心数/2）
zookeeper.nio.numSelectorThreads=
#NIO工作线程数,如果工作线程数设置为0,那么选择器线程就可以直接输出,默认值是（CPU核心数 * 2）
zookeeper.nio.numWorkerThreads=
#提交处理器工作线程数,如果该工作线程数设置为0,那么主线程就直接处理请求,默认是（CPU核心数）
zookeeper.commitProcessor.numWorkerThreads=
#设置为false禁用AdminServer
admin.enableServer=
#Jetty服务的监听端口,默认是8080
admin.serverPort=
#访问路径
admin.commandURL=

